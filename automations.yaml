- id: '12432533'
  alias: Monitor Cassie button
  trigger:
  - event_data:
      command: button_single
      device_ieee: 28:6d:97:00:01:03:80:97
    event_type: zha_event
    platform: event
  - event_data:
      command: button_double
      device_ieee: 28:6d:97:00:01:03:80:97
    event_type: zha_event
    platform: event
  - event_data:
      command: button_hold
      device_ieee: 28:6d:97:00:01:03:80:97
    event_type: zha_event
    platform: event
  condition: []
  action:
    service: mqtt.publish
    data_template:
      topic: buttons/pressed/cassieButton
      payload: '{{trigger.event.data[''command'']}}

        '
- id: 12432dfdsa533
  alias: Monitor Bill button
  trigger:
  - event_data:
      command: button_single
      device_ieee: 28:6d:97:00:01:03:80:89
    event_type: zha_event
    platform: event
  - event_data:
      command: button_double
      device_ieee: 28:6d:97:00:01:03:80:89
    event_type: zha_event
    platform: event
  - event_data:
      command: button_hold
      device_ieee: 28:6d:97:00:01:03:80:89
    event_type: zha_event
    platform: event
  condition: []
  action:
    service: mqtt.publish
    data_template:
      topic: buttons/pressed/billButton
      payload: '{{trigger.event.data[''command'']}}'
- id: '1600105804396'
  alias: IFTTT webhook received
  description: this takes the info from a webhook from IFTT and processes it.
  trigger:
  - event_data:
      action: call_service
    event_type: ifttt_webhook_received
    platform: event
  condition: []
  action:
  - data_template:
      entity_id: '{{ trigger.event.data.entity_id }}'
    service_template: '{{ trigger.event.data.service }}'
  mode: single
- id: '1600108549415'
  alias: lock front door
  description: ''
  trigger:
  - entity_id: input_boolean.front_door_lock
    from: 'off'
    platform: state
    to: 'on'
  condition: []
  action:
  - data:
      event: lock_door
    service: ifttt.trigger
  mode: single
- id: '1600109365241'
  alias: lock front door when going away or night mode
  description: ''
  trigger:
  - entity_id: input_select.mode
    platform: state
    to: away
  - entity_id: input_select.mode
    platform: state
    to: night
  condition: []
  action:
  - data: {}
    entity_id: input_boolean.front_door_lock
    service: input_boolean.turn_on
  mode: single
- id: '1600114475460'
  alias: open blinds at sunrise
  description: ''
  trigger:
  - event: sunrise
    platform: sun
  condition: []
  action:
  - data: {}
    entity_id: cover.blinds_window_covering
    service: cover.open_cover
  mode: single
- id: '1600114513596'
  alias: close blinds at sunset
  description: ''
  trigger:
  - event: sunset
    platform: sun
  condition: []
  action:
  - data: {}
    entity_id: cover.blinds_window_covering
    service: cover.close_cover
  mode: single
- id: '1600114632203'
  alias: set mode to away when everyone leaves
  description: ''
  trigger:
  - entity_id: group.everyone
    for:
      hours: 0
      minutes: 5
      seconds: 0
    from: home
    platform: state
    to: not_home
  condition:
  - condition: state
    entity_id: group.motionsensors
    state: 'off'
  action:
  - data:
      option: away
    entity_id: input_select.mode
    service: input_select.select_option
  - service: light.turn_off
    target:
      entity_id: light.all_lights
    data: {}
  - service: notify.tgrambill
    data:
      message: Everyone is gone, turned off all lights.
      data:
        inline_keyboard:
        - Home:/home
  - service: alarm_control_panel.alarm_arm_away
    data: {}
    target:
      entity_id: alarm_control_panel.home_alarm
  mode: single
- id: '1600114781047'
  alias: set mode to home when anyone returns
  description: ''
  trigger:
  - entity_id: group.everyone
    for: 0:00:06
    from: not_home
    platform: state
    to: home
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: input_select.mode
      state: vacation
    - condition: state
      entity_id: input_select.mode
      state: away
  action:
  - data:
      option: home
    entity_id: input_select.mode
    service: input_select.select_option
  - data: {}
    entity_id: alarm_control_panel.home_alarm
    service: alarm_control_panel.alarm_disarm
  - service: light.turn_on
    target:
      entity_id: light.downstairs_lights
    data:
      brightness_pct: 100
  - service: notify.tgrambill
    data:
      message: '{{ expand(''group.everyone'') | selectattr(''state'',''eq'',''home'')
        | map(attribute=''name'') | list | join('', '') }} returned home, disarming
        alarm.

        '
  - service: alarm_control_panel.alarm_disarm
    data: {}
    target:
      entity_id: alarm_control_panel.home_alarm
  mode: single
- id: '23546986'
  alias: Trigger alarm while armed away
  trigger:
  - platform: state
    entity_id: group.doorsensors
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 2
    id: doors
  - platform: state
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 2
    id: garages
    entity_id: group.garagedoors
  - platform: state
    entity_id: group.motionsensors
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 2
    id: motion
  condition:
  - condition: state
    entity_id: alarm_control_panel.home_alarm
    state: armed_away
  action:
  - service: alarm_control_panel.alarm_trigger
    entity_id: alarm_control_panel.home_alarm
  - choose:
    - conditions:
      - condition: trigger
        id: doors
      sequence:
      - service: notify.tgrambroadcast
        data:
          message: 'ALARM TRIGGERED, {{ expand(''group.doorsensors'') | selectattr(''state'',''eq'',''on'')
            | map(attribute=''name'') | list | join('', '') }} was opened.

            '
    - conditions:
      - condition: trigger
        id: garages
      sequence:
      - service: notify.tgrambroadcast
        data:
          message: 'ALARM TRIGGERED, {{ expand(''group.garagedoors'') | selectattr(''state'',''eq'',''on'')
            | map(attribute=''name'') | list | join('', '') }} was opened

            '
    - conditions:
      - condition: trigger
        id: motion
      sequence:
      - service: notify.tgrambroadcast
        data:
          message: 'ALARM TRIGGERED, motion detected from: {{ expand(''group.motionsensors'')
            | selectattr(''state'',''eq'',''on'') | map(attribute=''name'') | list
            | join('', '') }}

            '
    default: []
- id: '235659699'
  alias: Send notification when alarm is Armed in Away mode
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: armed_away
    from: disarmed
  action:
  - service: notify.tgrambill
    data:
      message: Alarm is armed away
      data:
        inline_keyboard:
        - Disarm:/disarm
- id: '1600220713742'
  alias: tv mode when harmony hub on
  description: ''
  trigger:
  - entity_id: remote.harmony_hub
    from: 'off'
    platform: state
    to: 'on'
  condition: []
  action:
  - condition: state
    entity_id: person.bill_tahler
    state: home
  - scene: scene.watching_tv
  - service: switch.turn_off
    target:
      entity_id: switch.fluxer
  mode: single
- id: '1600286895079'
  alias: 1 goodnight nfc tag
  description: nfc tag 1
  trigger:
  - event_data:
      tag_id: 57853ca7-66c9-466a-9525-38148d018967
    event_type: tag_scanned
    platform: event
  condition: []
  action:
  - data: {}
    entity_id: input_boolean.goodnight
    service: input_boolean.turn_on
  mode: single
- id: '1600287562682'
  alias: 2 tv scene nfc tag
  description: nfc tag 2
  trigger:
  - event_data:
      tag_id: a1b5e982-e018-470b-a566-ec47b5f0f000
    event_type: tag_scanned
    platform: event
  condition: []
  action:
  - scene: scene.watching_tv
  mode: single
- id: '1600287764389'
  alias: 3 start coffee maker nfc tag
  description: nfc tag 3
  trigger:
  - event_data:
      tag_id: 47999221-974f-4be7-9e3e-4a0ebe988bf2
    event_type: tag_scanned
    platform: event
  condition: []
  action:
  - data: {}
    entity_id: input_boolean.coffee_maker
    service: input_boolean.turn_on
  mode: single
- id: '1600287892869'
  alias: 4 turn on downstairs lights nfc tag
  description: tag 4
  trigger:
  - event_data:
      tag_id: 44d2e117-5e1e-4660-bb9b-7722ffe78f4b
    event_type: tag_scanned
    platform: event
  condition: []
  action:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.down_lights_on
  mode: single
- id: '1600298723692'
  alias: 5 open blinds
  description: tag 5
  trigger:
  - event_data:
      tag_id: 1e09a367-63e1-4463-8971-db1de7c7b24f
    event_type: tag_scanned
    platform: event
  condition: []
  action:
  - data: {}
    entity_id: cover.blinds_window_covering
    service: cover.open_cover
  mode: single
- id: '1600298852787'
  alias: 6 close blinds
  description: tag 6
  trigger:
  - event_data:
      tag_id: ece84c13-3fe4-4a62-aa93-ec840916a934
    event_type: tag_scanned
    platform: event
  condition: []
  action:
  - data: {}
    entity_id: cover.blinds_window_covering
    service: cover.close_cover
  mode: single
- id: 0b95e8fab2b24f3bade9c2406ae08849
  alias: Motioneye - kitchen - Motion started
  trigger:
  - platform: webhook
    webhook_id: motioneye-kitchen-started
  action:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.kitchen_motion
- id: 46fcbb676ea64d7188f1b16009018c8b
  alias: Motioneye - kitchen - Motion ended
  trigger:
  - platform: webhook
    webhook_id: motioneye-kitchen-ended
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.kitchen_motion
- alias: Enable motion detection
  trigger:
  - platform: state
    entity_id: input_boolean.picam_control
    to: 'on'
  action:
    service: rest_command.camera_motion_start
  id: cf9c8cb48a8848a8bd99ec4691ea947c
- id: b34efac466d64ece83ccefb7d1bde9d4
  alias: Disable motion detection
  trigger:
  - platform: state
    entity_id: input_boolean.kitchen_camera_control
    to: 'off'
  action:
  - service: rest_command.camera_motion_pause
- id: '1600841143732'
  alias: close van door from automation
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: closevan
  condition: []
  action:
  - service: cover.close_cover
    data: {}
    target:
      entity_id:
      - cover.van_garage_door
  - service: notify.mobile_app_pixel_3
    data:
      message: clear_notification
      data:
        tag: vannotify
  - service: notify.mobile_app_cassie_pixel_3
    data:
      message: clear_notification
      data:
        tag: vannotify
  - service: notify.mobile_app_bill_work_pixel
    data:
      message: clear_notification
      data:
        tag: vannotify
  mode: single
- id: '1601127551763'
  alias: clear notification when shop door closes
  description: ''
  trigger:
  - platform: state
    entity_id: cover.shop_door
    from: open
    to: closed
  condition: []
  action:
  - service: notify.mobile_app_oneplus8
    data:
      message: clear_notification
      data:
        tag: shopnotify
  - service: notify.mobile_app_cassie_pixel_4
    data:
      message: clear_notification
      data:
        tag: shopnotify
  mode: single
- id: '1601127622158'
  alias: clear notification when van door closes
  description: ''
  trigger:
  - platform: state
    entity_id: cover.van_garage_door
    from: open
    to: closed
  condition: []
  action:
  - service: notify.mobile_app_oneplus8
    data:
      message: clear_notification
      data:
        tag: vannotify
  - service: notify.mobile_app_cassie_pixel_4
    data:
      message: clear_notification
      data:
        tag: vannotify
  mode: single
- id: '1607918730101'
  alias: turn on entry lamps in morning
  description: ''
  trigger:
  - platform: time
    at: 05:00
  condition: []
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.entry_lamps, switch.inside_christmas_1, switch.inside_christmas_2
  mode: single
- id: '1622679409590'
  alias: turn on downstairs lights
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.down_lights_on
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: light.turn_on
    target:
      entity_id: light.downstairs_lights
    data:
      brightness: 255
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - service: input_boolean.turn_off
    target:
      entity_id: input_boolean.down_lights_on
  mode: single
- id: '1622687684520'
  alias: turn off downstairs lights group
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.down_lights_off
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: light.turn_off
    target:
      entity_id: light.downstairs_lights
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.down_lights_off
  mode: single
- id: '1622688790409'
  alias: turn off kitchen lights
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.kitchen_off
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: homeassistant.turn_off
    target:
      entity_id: group.kitchenoff
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.kitchen_off
  mode: single
- id: '1622688834959'
  alias: turn kitchen lights on
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.kitchen_on
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: homeassistant.turn_on
    target:
      entity_id: group.kitchenon
  - service: input_boolean.turn_off
    target:
      entity_id: input_boolean.kitchen_on
  mode: single
- id: '1622693701189'
  alias: bedroom fan timer
  description: ''
  trigger:
  - platform: state
    entity_id: switch.bedroom_fan
    from: 'off'
    to: 'on'
  condition: []
  action:
  - delay:
      hours: 5
      minutes: 0
      seconds: 0
      milliseconds: 0
  - service: switch.turn_off
    target:
      entity_id: switch.bedroom_fan
  mode: single
- id: '1622695212600'
  alias: goodnight mode on
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.goodnight
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: light.turn_off
    target:
      entity_id: light.all_lights
  - service: switch.turn_on
    target:
      entity_id: switch.noise_machine
  - service: cover.set_cover_position
    target:
      entity_id:
      - cover.big_bedroom_curtains
      - cover.small_bedroom_curtains
    data:
      position: 100
  - service: input_select.select_option
    target:
      entity_id: input_select.mode
    data:
      option: night
  mode: single
- id: '1626576729738'
  alias: telegram dad if his server is offline
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.jim_home_assistant_status
    from: 'off'
    to: 'on'
    for: 00:00:30
  condition:
  - condition: state
    entity_id: switch.jim_reboot
    state: 'off'
  action:
  - service: notify.tgramdad
    data:
      message: Bill's home assistant cannot reach your home assistant via http request
  - service: notify.tgrambill
    data:
      message: Dad's server is down
  mode: single
- id: '1626577253905'
  alias: notify bill if karen's HA is down
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.karen_home_assistant_status
    from: 'off'
    to: 'on'
    for: 00:00:30
  condition:
  - condition: state
    entity_id: switch.karen_reboot
    state: 'off'
  action:
  - service: notify.tgrambill
    data:
      message: Karen's server is offline
  mode: single
- id: '1626785620153'
  alias: reset karen reboot switch
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.karen_home_assistant_status
    from: 'on'
    to: 'off'
    for: 00:00:05
  condition: []
  action:
  - service: switch.turn_off
    target:
      entity_id: switch.karen_reboot
  mode: single
- id: '1626785646883'
  alias: reset jim reboot switch
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.jim_home_assistant_status
    from: 'on'
    to: 'off'
    for: 00:00:05
  condition: []
  action:
  - service: switch.turn_off
    target:
      entity_id: switch.jim_reboot
  mode: single
- id: '1626813565886'
  alias: notify if jim server reboot too long
  description: ''
  trigger:
  - platform: state
    entity_id: switch.jim_reboot
    to: 'on'
    for: 00:05:00
  condition: []
  action:
  - service: notify.tgrambill
    data:
      message: jim server reboot taking too long
  - service: notify.tgramdad
    data:
      message: your HA server has been rebooting a very long time
  mode: single
- id: '1626813639378'
  alias: notify if karen server stuck rebooting
  description: ''
  trigger:
  - platform: state
    entity_id: switch.karen_reboot
    to: 'on'
    for: 00:05:00
  condition: []
  action:
  - service: notify.tgrambill
    data:
      message: karen reboot taking too long
  mode: single
- id: core_update_available
  alias: Update Available
  trigger:
  - platform: state
    entity_id: update.home_assistant_core_update
    to: 'on'
  - platform: state
    entity_id: update.home_assistant_operating_system_update
    to: 'on'
  - platform: state
    entity_id: update.home_assistant_supervisor_update
    to: 'on'
  action:
  - service: notify.tgrambill
    data_template:
      title: '*Information*'
      message: An update for {{ trigger.to_state.name }} is available. You are running
        {{ trigger.to_state.attributes.installed_version }}, the latest version is
        {{ trigger.to_state.attributes.latest_version }}.
  initial_state: true
- id: '1628948258302'
  alias: lights from bedroom door
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.bedroom_door_ias_zone
    to: 'on'
  condition:
  - condition: state
    entity_id: light.downstairs_lights
    state: 'off'
  - condition: state
    entity_id: input_select.mode
    state: night
  action:
  - service: light.turn_on
    target:
      entity_id:
      - light.upstairs_sconces
      - light.play_room_ceiling_lights
    data:
      brightness: 1
  - wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.bedroom_door_ias_zone
      for:
        hours: 0
        minutes: 0
        seconds: 1
      to: 'off'
    continue_on_timeout: false
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - service: light.turn_off
    target:
      entity_id:
      - light.upstairs_sconces
      - light.play_room_ceiling_lights
  mode: restart
- id: '1630758732226'
  alias: notify bill if karen's HA comes back
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.karen_home_assistant_status
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: 0
  condition: []
  action:
  - service: notify.tgrambill
    data:
      message: Karen's server is back up
  mode: single
- id: '1630758801237'
  alias: notify if jim server is back
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.jim_home_assistant_status
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  condition: []
  action:
  - wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.jim_home_assistant_status
      to: 'off'
      for:
        hours: 0
        minutes: 0
        seconds: 5
        milliseconds: 0
  - service: notify.tgrambill
    data:
      message: jim server is back
  - service: notify.tgramdad
    data:
      message: your HA server is back
  mode: restart
- id: '1632496248674'
  alias: downstairs lights in morning
  description: ''
  trigger:
  - platform: state
    entity_id: input_select.mode
    from: night
    to: home
  condition: []
  action:
  - service: light.turn_on
    target:
      entity_id:
      - light.desk_lamp
      - light.kitchen_counter_lights
      - light.play_room_ceiling_lights
      - light.entry_lamps
    data: {}
  mode: single
- id: '1633981916173'
  alias: goodnight mode off
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.goodnight
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: switch.turn_off
    target:
      entity_id: switch.noise_machine
  - service: cover.set_cover_position
    target:
      entity_id:
      - cover.big_bedroom_curtains
      - cover.small_bedroom_curtains
    data:
      position: 0
  - service: light.turn_on
    target:
      entity_id:
      - light.downstairs_sconces
      - light.play_room_ceiling_lights
      - light.kitchen_counter_lights
      - light.desk_lamp
    data:
      brightness_pct: 40
  - service: input_select.select_option
    target:
      entity_id: input_select.mode
    data:
      option: home
  mode: single
- id: '1634091828297'
  alias: mode to vacation when gone a long time
  description: ''
  trigger:
  - platform: state
    entity_id: input_select.mode
    to: away
    for:
      hours: 6
      minutes: 0
      seconds: 0
      milliseconds: 0
  condition: []
  action:
  - service: input_select.select_option
    target:
      entity_id: input_select.mode
    data:
      option: vacation
  - service: notify.tgrambill
    data:
      message: gone for a long time, vacation mode on
  mode: single
- id: '1635023741355'
  alias: double tap kitchen counter
  description: ''
  use_blueprint:
    path: kpine/ge_double.yaml
    input:
      device: 05c31911e96815f87acd7841c08739f8
      double_tap_on:
      - service: light.turn_on
        data:
          brightness: 255
        target:
          entity_id: light.kitchen_lights
      double_tap_off:
      - service: light.turn_off
        target:
          entity_id: light.kitchen_lights
- id: '1635024922749'
  alias: double tap hanging lights
  description: ''
  use_blueprint:
    path: kpine/ge_double.yaml
    input:
      device: 8f1a45bed41cca60b912b6878eac8127
      double_tap_on:
      - service: light.turn_on
        data:
          brightness: 255
        target:
          entity_id: light.kitchen_lights
      double_tap_off:
      - service: light.turn_off
        target:
          entity_id: light.kitchen_lights
- id: '1635025575126'
  alias: double tap ktichen spotlights
  description: ''
  use_blueprint:
    path: kpine/ge_double.yaml
    input:
      device: 5beb67af1e8c7382c94f5406b1d4eb1f
      double_tap_on:
      - service: light.turn_on
        data:
          brightness: 255
        target:
          entity_id: light.kitchen_lights
      double_tap_off:
      - service: light.turn_off
        target:
          entity_id: light.kitchen_lights
- id: '1635025654571'
  alias: double tap nook lights
  description: ''
  use_blueprint:
    path: kpine/ge_double.yaml
    input:
      device: 05c31911e96815f87acd7841c08739f8
      double_tap_on:
      - service: light.turn_on
        data:
          brightness: 255
        target:
          entity_id: light.kitchen_lights
      double_tap_off:
      - service: light.turn_off
        target:
          entity_id: light.kitchen_lights
- id: '1635025695807'
  alias: double tap dining chandelier
  description: ''
  use_blueprint:
    path: kpine/ge_double.yaml
    input:
      device: 729f7538b2ad798335ea0849829f568c
      double_tap_on:
      - service: light.turn_on
        data:
          brightness: 255
        target:
          entity_id: light.downstairs_lights
      double_tap_off:
      - service: light.turn_off
        target:
          entity_id: light.downstairs_lights
- id: '1635025719933'
  alias: double tap entry chandelier
  description: ''
  use_blueprint:
    path: kpine/ge_double.yaml
    input:
      device: e7436e7759dbd58180b4ab37f767f3ab
      double_tap_on:
      - service: light.turn_on
        data:
          brightness: 255
        target:
          entity_id: light.downstairs_lights
      double_tap_off:
      - service: light.turn_off
        target:
          entity_id: light.downstairs_lights
- id: '1635025732771'
  alias: double tap tv lights
  description: ''
  use_blueprint:
    path: kpine/ge_double.yaml
    input:
      device: e464218f6392a49c818fa40f330a4795
      double_tap_on:
      - service: light.turn_on
        data:
          brightness: 255
        target:
          entity_id: light.downstairs_lights
      double_tap_off:
      - service: light.turn_off
        target:
          entity_id: light.downstairs_lights
- id: '1635025745669'
  alias: double tap down sconces
  description: ''
  use_blueprint:
    path: kpine/ge_double.yaml
    input:
      device: 9b855fd6ab369eb9e4ca5523168c3ac8
      double_tap_on:
      - service: light.turn_on
        data:
          brightness: 255
        target:
          entity_id: light.downstairs_lights
      double_tap_off:
      - service: light.turn_off
        target:
          entity_id: light.downstairs_lights
- id: '1635025809906'
  alias: double tap play room lights
  description: ''
  use_blueprint:
    path: kpine/ge_double.yaml
    input:
      device: 6ff611de637076471aa07649a69dacc6
      double_tap_on:
      - service: light.turn_on
        data:
          brightness: 255
        target:
          entity_id:
          - light.play_room_ceiling_lights
          - light.fireplace_lights
      double_tap_off:
      - service: light.turn_off
        target:
          entity_id:
          - light.play_room_ceiling_lights
          - light.fireplace_lights
- id: '1635025832251'
  alias: double tap fireplace lights
  description: ''
  use_blueprint:
    path: kpine/ge_double.yaml
    input:
      device: e5d269928f2465646b626832651400e3
      double_tap_on:
      - service: light.turn_on
        data:
          brightness: 255
        target:
          entity_id:
          - light.play_room_ceiling_lights
          - light.fireplace_lights
      double_tap_off:
      - service: light.turn_off
        target:
          entity_id:
          - light.play_room_ceiling_lights
          - light.fireplace_lights
- id: '1635025863565'
  alias: double tap bathroom lights
  description: ''
  use_blueprint:
    path: kpine/ge_double.yaml
    input:
      device: 62a27abc24e6188c1cd49ca40471dd6e
      double_tap_on: []
      double_tap_off:
      - service: light.turn_off
        target:
          entity_id: light.downstairs_lights
- id: '1635027158366'
  alias: double tap high floodlights
  description: ''
  use_blueprint:
    path: kpine/honeywell_double.yaml
    input:
      device: 6df0b67c6642e07b78f217615f3e3c03
      double_tap_on:
      - service: light.turn_on
        target:
          entity_id: light.downstairs_lights
        data:
          brightness: 255
      double_tap_off:
      - service: light.turn_off
        target:
          entity_id: light.downstairs_sconces
- id: '1636338442674'
  alias: turn off green lights after 10 minutes
  description: ''
  trigger:
  - platform: state
    entity_id: light.green_light
    to: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - platform: state
    entity_id: light.guest_room_lamp
    to: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  condition: []
  action:
  - service: light.turn_off
    target:
      entity_id: '{{ trigger.entity_id }}'
  mode: single
- id: '1636680999603'
  alias: gable lights at night
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: '0'
  condition: []
  action:
  - service: light.turn_on
    target:
      entity_id: light.gable_lights
  mode: single
- id: '1636681032903'
  alias: gable lights off at morning
  description: ''
  trigger:
  - platform: sun
    event: sunrise
    offset: '0'
  condition: []
  action:
  - service: light.turn_off
    target:
      entity_id: light.gable_lights
  mode: single
- id: '1636683188742'
  alias: kitchen counter lights from motion at night
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.kitchen_motion_sensor_ias_zone
    to: 'on'
  condition:
  - condition: time
    after: '21:00:00'
    before: 04:30:00
  action:
  - service: light.turn_on
    target:
      entity_id: light.kitchen_counter_lights
  - wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.kitchen_motion_sensor_ias_zone
      from: 'on'
      to: 'off'
      for:
        hours: 0
        minutes: 1
        seconds: 0
        milliseconds: 0
    - platform: state
      entity_id: light.kitchen_counter_lights
      to: 'off'
  - service: light.turn_off
    target:
      entity_id: light.kitchen_counter_lights
  mode: restart
- id: '1637082334146'
  alias: kitchen counter lights together
  description: ''
  trigger:
  - platform: state
    entity_id: light.kitchen_cabinet_lights
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: light.kitchen_cabinet_lights
        state: 'on'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.kitchen_light_strip
    - conditions:
      - condition: state
        entity_id: light.kitchen_cabinet_lights
        state: 'off'
      sequence:
      - service: light.turn_off
        target:
          entity_id: light.kitchen_light_strip
    default: []
  mode: single
- id: '1637668300911'
  alias: notify bill when cassie wakes up
  description: ''
  trigger:
  - platform: state
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 0
    entity_id: binary_sensor.cassie_pixel_4_is_charging
  condition:
  - condition: time
    after: 04:00:00
    before: 08:30:00
  action:
  - service: notify.tgrambill
    data:
      message: Cassie is awake
  - service: input_boolean.turn_off
    target:
      entity_id: input_boolean.wakeup_switch
  mode: single
- id: '1638475038540'
  alias: turn off Christmas lights
  description: ''
  trigger:
  - platform: sun
    event: sunrise
    offset: 01:00:00
  - platform: time
    at: '22:00:00'
  condition: []
  action:
  - service: light.turn_off
    target:
      entity_id: light.house_christmas_lights
  mode: single
- id: '1638475099105'
  alias: turn on Christmas lights
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: -01:00:00
  - platform: time
    at: 05:30:00
  condition: []
  action:
  - service: light.turn_on
    target:
      entity_id:
      - light.house_christmas_lights
  mode: single
- id: '1640360842884'
  alias: camper too cold
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.camper_temperature
    below: input_number.camper_setpoint
    value_template: '{{ states(''sensor.camper_temperature'') | float + 1 }}'
  condition: []
  action:
  - service: notify.tgrambill
    data:
      message: camper is below setpoint
  mode: single
- id: '1640361695579'
  alias: monitor camper heat status
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.camper_temperature
    below: input_number.camper_setpoint
  condition: []
  action:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.camper_heat_on
  - wait_for_trigger:
    - platform: numeric_state
      entity_id: sensor.camper_temperature
      above: input_number.camper_setpoint
      value_template: '{{ states(''sensor.camper_temperature'') | float + 1 }}'
  - service: input_boolean.turn_off
    target:
      entity_id: input_boolean.camper_heat_on
  mode: single
- id: '1640362428297'
  alias: reset camper heat timer
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.reset_camper_heat_counter
    to: 'on'
  condition: []
  action:
  - service: counter.reset
    target:
      entity_id: counter.camper_heat_runtime
  - service: input_boolean.turn_off
    target:
      entity_id: input_boolean.reset_camper_heat_counter
  - service: input_number.set_value
    target:
      entity_id: input_number.total_camper_runtime_hours
    data:
      value: 0
  mode: single
- id: '1640379454288'
  alias: notify if below freezing
  description: ''
  trigger:
  - platform: state
    entity_id: weather.openweathermap
    attribute: forecast
  condition:
  - condition: template
    value_template: '{{ (state_attr(''weather.openweathermap'',''forecast'') | first).templow
      < 32 }}'
  action:
  - service: notify.tgrambill
    data:
      message: it will be below freezing today, the low is {{ (state_attr('weather.openweathermap','forecast')
        | first).templow }} F
  - wait_for_trigger:
    - platform: time
      at: 00:01:00
  mode: single
- id: '1641482449354'
  alias: turn off printer when finished
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.octoprint_job_percentage
    above: '99'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: state
    entity_id: input_boolean.auto_off_printer
    state: 'on'
  action:
  - service: notify.tgrambill
    data:
      message: printing complete, turning off printer in 10 minutes
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - condition: state
    entity_id: input_boolean.auto_off_printer
    state: 'on'
  - service: button.press
    target:
      entity_id: button.shutdown_octoprint
  - delay:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
  - service: homeassistant.turn_off
    target:
      entity_id:
      - input_boolean.auto_off_printer
      - switch.3d_printer
  - service: notify.tgrambill
    data:
      message: turned off printer
  mode: single
- id: '1641533596437'
  alias: notify hot water heater changes
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.heat_pump_water_heater_running_state
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: sensor.heat_pump_water_heater_running_state
        state: Compressor Running
      sequence:
      - service: notify.tgrambill
        data:
          message: Hot water heater compressor is on, water level is {{ states('sensor.heat_pump_water_heater_available_hot_water')
            }}%
    - conditions:
      - condition: state
        entity_id: sensor.heat_pump_water_heater_running_state
        state: Compressor and Element On
      sequence:
      - service: notify.tgrambill
        data:
          message: Water heater element is on, water level is {{ states('sensor.heat_pump_water_heater_available_hot_water')
            }}%
    default:
    - service: notify.tgrambill
      data:
        message: '{{ states(''sensor.heat_pump_water_heater_available_hot_water'')
          }}% hot water available. Water heater is off'
  mode: single
- id: '1641738167438'
  alias: color light from hot water level
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.heat_pump_water_heater_available_hot_water
  condition:
  - condition: state
    state: 'on'
    entity_id: light.shower_flood_light
  action:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.heat_pump_water_heater_available_hot_water
        above: '90'
      sequence:
      - service: light.turn_on
        target:
          entity_id:
          - light.shower_flood_light
        data:
          color_name: green
      - delay:
          hours: 0
          minutes: 0
          seconds: 5
          milliseconds: 0
      - service: light.turn_on
        target:
          entity_id:
          - light.shower_flood_light
        data:
          color_temp: 250
    - conditions:
      - condition: numeric_state
        entity_id: sensor.heat_pump_water_heater_available_hot_water
        above: '30'
        below: '50'
      sequence:
      - service: light.turn_on
        target:
          entity_id:
          - light.shower_flood_light
        data:
          color_name: darkgoldenrod
          flash: long
    - conditions:
      - condition: numeric_state
        entity_id: sensor.heat_pump_water_heater_available_hot_water
        above: '5'
        below: '15'
      sequence:
      - service: light.turn_on
        target:
          entity_id:
          - light.shower_flood_light
        data:
          color_name: fuchsia
          flash: long
    - conditions:
      - condition: numeric_state
        entity_id: sensor.heat_pump_water_heater_available_hot_water
        below: '4'
      sequence:
      - service: light.turn_on
        target:
          entity_id:
          - light.shower_flood_light
        data:
          color_name: red
          flash: short
    default: []
  mode: single
- id: '1641759048659'
  alias: set water heater light when coming on
  description: ''
  trigger:
  - platform: state
    entity_id: light.water_heater_light
    from: unavailable
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  condition: []
  action:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.heat_pump_water_heater_available_hot_water
        above: '90'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.water_heater_light
        data:
          kelvin: 5000
    - conditions:
      - condition: numeric_state
        entity_id: sensor.heat_pump_water_heater_available_hot_water
        above: '30'
        below: '50'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.water_heater_light
        data:
          color_name: yellow
    - conditions:
      - condition: numeric_state
        entity_id: sensor.heat_pump_water_heater_available_hot_water
        above: '5'
        below: '20'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.water_heater_light
        data:
          color_name: orange
    - conditions:
      - condition: numeric_state
        entity_id: sensor.heat_pump_water_heater_available_hot_water
        below: '5'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.water_heater_light
        data:
          color_name: red
    default: []
  mode: single
- id: '1642139496097'
  alias: notify bill octoprint dies
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.octoprint_problem_status
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition: []
  action:
  - service: notify.tgrambill
    data:
      message: Octoprint server is offline
  mode: single
- id: '1642306179582'
  alias: bathroom lights on together
  description: ''
  trigger:
  - platform: state
    entity_id: light.vanity_lights
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: light.vanity_lights
        state: 'on'
      sequence:
      - service: light.turn_on
        target:
          entity_id:
          - light.shower_flood_light
          - light.toilet_flood_light
    - conditions:
      - condition: state
        entity_id: light.vanity_lights
        state: 'off'
      sequence:
      - service: light.turn_off
        target:
          entity_id:
          - light.shower_flood_light
          - light.toilet_flood_light
    default: []
  mode: single
- id: '1642318744044'
  alias: notify if truck heater is on
  description: ''
  trigger:
  - platform: state
    to: 'on'
    entity_id: switch.truck_heater
  condition: []
  action:
  - service: notify.tgrambill
    data:
      message: truck heater is on
  mode: single
- id: '1642318815416'
  alias: turn on truck heater
  description: ''
  trigger:
  - platform: time
    at: 05:00:00
  condition: []
  action:
  - service: switch.turn_on
    target:
      entity_id: switch.truck_heater
  - service: automation.turn_off
    target:
      entity_id:
      - automation.turn_on_truck_heater
  mode: single
- id: '1642449343504'
  alias: color shower light when turning on
  description: ''
  trigger:
  - platform: state
    entity_id: light.shower_flood_light
    to: 'on'
    from: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.heat_pump_water_heater_available_hot_water
        above: '30'
        below: '50'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.shower_flood_light
        data:
          color_name: goldenrod
    - conditions:
      - condition: numeric_state
        entity_id: sensor.heat_pump_water_heater_available_hot_water
        above: '5'
        below: '20'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.shower_flood_light
        data:
          color_name: orange
    - conditions:
      - condition: numeric_state
        entity_id: sensor.heat_pump_water_heater_available_hot_water
        below: '5'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.shower_flood_light
        data:
          color_name: red
    default: []
  mode: single
- id: '1642536427971'
  alias: turn flux back on after watching tv
  description: ''
  trigger:
  - platform: state
    entity_id: remote.harmony_hub
    to: 'off'
  condition: []
  action:
  - service: switch.turn_on
    target:
      entity_id: switch.fluxer
  mode: single
- id: '1644884404010'
  alias: notify Cassie bill is almost home
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.commute
    below: '10'
  condition:
  - condition: state
    entity_id: input_boolean.bill_distance
    state: 'on'
  - condition: numeric_state
    entity_id: sensor.cassie_distance
    above: '5'
  action:
  - service: notify.tgramcassie
    data:
      message: bill is less than 10 minutes from home
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.bill_distance
  - wait_for_trigger:
    - platform: zone
      entity_id: person.bill_tahler
      zone: zone.home
      event: enter
    timeout: 00:15:00
    continue_on_timeout: false
  - service: notify.tgramcassie
    data:
      message: bill is arriving now
  mode: single
- id: '1644884974749'
  alias: notify bill when Cassie is almost home
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.cassie_distance
    below: '10'
  condition:
  - condition: state
    entity_id: input_boolean.cassie_distance
    state: 'on'
  - condition: state
    entity_id: person.cassie
    state: not_home
  action:
  - service: notify.tgrambill
    data:
      message: Cassie is less than 10 minutes away
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.cassie_distance
  - wait_for_trigger:
    - platform: numeric_state
      entity_id: sensor.cassie_distance
      below: '1'
    timeout: 00:15:00
    continue_on_timeout: false
  - service: notify.tgrambill
    data:
      message: Cassie is arriving now
  mode: single
- id: '1644886108920'
  alias: turn on bill distance boolean
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.commute
    above: '15'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition: []
  action:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.bill_distance
  mode: single
- id: '1644886152348'
  alias: turn on Cassie distance boolean
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.cassie_distance
    above: '15'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition: []
  action:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.cassie_distance
  mode: single
- id: '1644899703491'
  alias: notify Cassie when bill leaves work
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.oneplus8_detected_activity
    attribute: in_vehicle
    above: '80'
  condition:
  - condition: state
    entity_id: input_boolean.bill_distance
    state: 'on'
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
    after: '16:00:00'
    before: '17:00:00'
  action:
  - service: notify.tgramcassie
    data:
      message: Bill''s commute will be {{ states('sensor.commute') }} minutes
  - service: automation.turn_off
    data:
      stop_actions: false
    target:
      entity_id: automation.notify_cassie_when_bill_leaves_work
  - service: notify.tgrambill
    data:
      message: Bill''s commute will be {{ states('sensor.commute') }} minutes
      data:
        inline_keyboard:
        - Update:/how-far-bill
  - delay:
      hours: 2
      minutes: 0
      seconds: 0
      milliseconds: 0
  - service: automation.turn_on
    data: {}
    target:
      entity_id: automation.notify_cassie_when_bill_leaves_work
  mode: single
- id: '1645024798707'
  alias: guest mode on
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.guest_mode
    to: 'on'
  condition: []
  action:
  - service: automation.turn_off
    data: {}
    target:
      entity_id:
      - automation.bedroom_fan_timer
      - automation.color_light_from_hot_water_level
      - automation.color_shower_light_when_turning_on
      - automation.downstairs_lights_in_morning
      - automation.goodnight_mode_off
      - automation.lights_from_bedroom_door
      - automation.mode_to_vacation_when_gone_a_long_time
      - automation.set_mode_to_away_when_everyone_leaves
      - automation.set_water_heater_light_when_coming_on
      - automation.set_mode_to_home_when_anyone_returns
      - automation.turn_flux_back_on_after_watching_tv
      - automation.tv_mode_when_harmony_hub_on
      - automation.turn_on_entry_lamps_in_morning
      - automation.turn_off_all_lights
  - service: input_select.select_option
    data:
      option: no automations
    target:
      entity_id: input_select.mode
  mode: single
- id: '1645025009925'
  alias: guest mode off
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.guest_mode
    to: 'off'
  condition: []
  action:
  - service: automation.turn_on
    data:
      stop_actions: false
    target:
      entity_id:
      - automation.bedroom_fan_timer
      - automation.color_light_from_hot_water_level
      - automation.color_shower_light_when_turning_on
      - automation.downstairs_lights_in_morning
      - automation.goodnight_mode_off
      - automation.lights_from_bedroom_door
      - automation.mode_to_vacation_when_gone_a_long_time
      - automation.set_mode_to_away_when_everyone_leaves
      - automation.set_water_heater_light_when_coming_on
      - automation.set_mode_to_home_when_anyone_returns
      - automation.turn_flux_back_on_after_watching_tv
      - automation.tv_mode_when_harmony_hub_on
      - automation.turn_on_entry_lamps_in_morning
      - automation.turn_off_all_lights
  - service: input_select.select_option
    data:
      option: home
    target:
      entity_id: input_select.mode
  mode: single
- id: '1645999441918'
  alias: send updated distance for bill via telegram
  description: ''
  trigger:
  - platform: event
    event_type: telegram_command
    event_data:
      command: /how-far-bill
  - platform: event
    event_type: telegram_text
    event_data:
      text: how far is bill
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /how-far-bill
  condition: []
  action:
  - service: telegram_bot.send_message
    data:
      target:
      message: Bill is {{ states('sensor.commute') }} minutes from home
      inline_keyboard:
      - Update:/how-far-bill
  mode: single
- id: '1645999721856'
  alias: test telegram keyboard
  description: ''
  trigger:
  - platform: event
    event_type: telegram_command
    event_data:
      command: /test
  - platform: event
    event_type: telegram_text
    event_data:
      text: initiate test
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /test
  condition: []
  action:
  - service: notify.tgrambill
    data:
      message: test worked
  mode: single
- id: '1646003643777'
  alias: send updated distance for cassie via telegram
  description: ''
  trigger:
  - platform: event
    event_type: telegram_command
    event_data:
      command: /how-far-cassie
  - platform: event
    event_type: telegram_text
    event_data:
      text: how far is cassie
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /how-far-cassie
  condition: []
  action:
  - service: notify.tgrambill
    data:
      message: Cassie is {{ states('sensor.cassie_distance') }} minutes from home
  mode: single
- id: '1646073791916'
  alias: disarm alarm from telegram
  description: ''
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /disarm
  - platform: event
    event_type: telegram_text
    event_data:
      text: disarm
  - platform: event
    event_type: telegram_command
    event_data:
      command: /disarm
  condition: []
  action:
  - service: alarm_control_panel.alarm_disarm
    data: {}
    target:
      entity_id: alarm_control_panel.home_alarm
  mode: single
- id: '1646073867507'
  alias: arm alarm from telegram
  description: ''
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /arm-away
  - platform: event
    event_type: telegram_text
    event_data:
      text: arm
  - platform: event
    event_type: telegram_command
    event_data:
      command: /arm-away
  condition:
  - condition: state
    entity_id: group.everyone
    state: not_home
  action:
  - service: alarm_control_panel.alarm_arm_away
    data: {}
    target:
      entity_id: alarm_control_panel.home_alarm
  mode: single
- id: '1646073980103'
  alias: ack alarm from telegram
  description: ''
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /ack
  - platform: event
    event_type: telegram_text
    event_data:
      text: ack
  - platform: event
    event_type: telegram_command
    event_data:
      command: /ack
  condition: []
  action:
  - service: alarm_control_panel.alarm_arm_away
    data: {}
    target:
      entity_id: alarm_control_panel.home_alarm
  mode: single
- id: '1646083118502'
  alias: clear notification when gym door closes
  description: ''
  trigger:
  - platform: state
    entity_id: cover.gym_garage_door
    from: open
    to: closed
  condition: []
  action:
  - service: notify.mobile_app_oneplus8
    data:
      message: clear_notification
      data:
        tag: gymnotify
  - service: notify.mobile_app_cassie_pixel_4
    data:
      message: clear_notification
      data:
        tag: gymnotify
  mode: single
- id: '1646083382155'
  alias: notify gym door left open
  description: ''
  trigger:
  - platform: state
    entity_id: cover.gym_garage_door
    to: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition: []
  action:
  - service: notify.mobile_app_oneplus8
    data:
      message: Gym door left open 10 minutes
      data:
        tag: gymnotify
        sticky: 'true'
  - service: notify.mobile_app_cassie_pixel_4
    data:
      message: Gym door left open 10 minutes
      data:
        tag: gymnotify
        sticky: 'true'
  mode: single
- id: '1646086775701'
  alias: notify van door left open
  description: ''
  trigger:
  - platform: state
    entity_id: cover.van_garage_door
    to: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition: []
  action:
  - service: notify.mobile_app_oneplus8
    data:
      message: Van door left open 10 minutes
      data:
        tag: vannotify
        sticky: 'true'
  - service: notify.mobile_app_cassie_pixel_4
    data:
      message: Van door left open 10 minutes
      data:
        tag: vannotify
        sticky: 'true'
  mode: single
- id: '1646086823964'
  alias: notify shop door left open
  description: ''
  trigger:
  - platform: state
    entity_id: cover.shop_garage_door
    to: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition: []
  action:
  - service: notify.mobile_app_oneplus8
    data:
      message: Shop door left open 10 minutes
      data:
        tag: shopnotify
        sticky: 'true'
  - service: notify.mobile_app_cassie_pixel_4
    data:
      message: Shop door left open 10 minutes
      data:
        tag: shopnotify
        sticky: 'true'
  mode: single
- id: '1646095040693'
  alias: telegram tester
  description: ''
  trigger:
  - platform: event
    event_type: telegram_text
    event_data:
      text: getid
  condition: []
  action:
  - service: telegram_bot.send_message
    data:
      message: The chat ID is {{ trigger.event.data["chat_id"] }}
      target:
  mode: single
- id: '1646165227586'
  alias: Send notification when alarm is disarmed
  description: ''
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: disarmed
  condition: []
  action:
  - service: notify.tgrambill
    data:
      message: Alarm is disarmed
      data:
        inline_keyboard:
        - Re-arm:/arm
  mode: single
- id: '1646576465668'
  alias: flash lights from doorbell
  description: ''
  trigger:
  - platform: device
    device_id: da4eefc7172326319ae08285d8a06ed1
    domain: nest
    type: doorbell_chime
  condition:
  - condition: state
    entity_id: input_select.mode
    state: home
  action:
  - service: light.toggle
    data:
      transition: 0
    target:
      entity_id:
      - light.kitchen_lights
      - light.play_room_ceiling_lights
      - light.dining_room_chandelier
  - delay:
      hours: 0
      minutes: 0
      seconds: 2
      milliseconds: 0
  - service: light.toggle
    data:
      transition: 0
    target:
      entity_id:
      - light.kitchen_lights
      - light.play_room_ceiling_lights
      - light.dining_room_chandelier
  mode: single
- id: '1648478665435'
  alias: set thermostat low when vacation
  description: ''
  trigger:
  - platform: state
    entity_id: climate.thermostat
    attribute: preset_modes
    from: vacation
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: state
    entity_id: input_select.mode
    state: vacation
  action:
  - service: notify.tgrambill
    data:
      message: Thermostat is not in vacation mode
  mode: single
- id: '1650300043608'
  alias: notify fridge too warm
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.fridge_temperature
    above: '41'
    for:
      hours: 0
      minutes: 30
      seconds: 0
  condition: []
  action:
  - service: notify.tgrambill
    data:
      message: Fridge is too warm
  mode: single
- id: '1650893276029'
  alias: send snapshot to bill when alarm triggered
  description: ''
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: triggered
  condition: []
  action:
  - service: camera.snapshot
    data:
      filename: /tmp/picture.jpg
    target:
      entity_id: camera.kitchen
  - service: notify.tgrambill
    data:
      message: Kitchen snapshot
      data:
        photo:
        - file: /tmp/picture.jpg
          caption: Kitchen Snapshot
  mode: single
